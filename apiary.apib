FORMAT: 1A
HOST: https://push.notifica.re/

# Notificare Push API
An API to send mobile messages to users and their devices

# Group Notification
Methods to send notifications to specific audiences. 
These calls are the same as the ones that are called from the Dashboard.

## POST /notification/broadcast
Send a message to **all** devices. This call must be authenticated with the `applicationKey` and `masterSecret`.

+ Request (application/json)

        {
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "_id":"12345",
                "message":"notifications are queued"
        }

## POST /notification/tags
Send a message to devices with any of the specified `tags`. The call accepts an array of tags. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Request (application/json)

        {
                "tags":["test1","test2"],
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "_id":"12345",
                "message":"notifications are queued"
        }
        
## POST /notification/segments
Send a message to users in one or more of the specified `segments`. The call accepts an array of IDs segments. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Request (application/json)

        {
                "segments":["526f7a71dab9d70711000003","526f7a71dab9d70711000004"],
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "_id":"12345",
                "message":"notifications are queued"
        }
        
## POST /notification/user/{user}
Send a message to a `user`. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Parameters

    + user (required, string, `testuser@example.com`)...The user ID is the one the client device registered with, e.g., the user's email address. 

+ Request (application/json)

        {
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "_id":"12345",
                "message":"notifications are queued"
        }
        
## POST /notification/device/{device}
Send a message to a `device`. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Parameters

    + device (required, string, `bbff2ce9b547d2df4731bac277dc4360dcc4874309ece7950a8bd526b5af2218`)...The deviceID is the ID as registered by the device, e.g. APNS token or GCM registration ID.

+ Request (application/json)

        {
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "_id":"12345",
                "message":"notifications are queued"
        }

# Group Notification Test
Methods to test notifications to specific audiences. The calls are basically the same as the ones in the previous section, only now, no actual notification is sent, they just return you the size of your audience. 

## POST /test/notification/broadcast
Test a message to **all** devices. This call must be authenticated with the `applicationKey` and `masterSecret`.

+ Request (application/json)

        {
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "count":"42"
        }
        
## POST /test/notification/tags
Test a message to devices with any of the specified `tags`. The call accepts an array of tags. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Request (application/json)

        {
                "tags":["test1","test2"],
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "count":"42"
        }
        
## POST /test/notification/segments
Send a message to users in one or more of the specified `segments`. The call accepts an array of IDs segments. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Request (application/json)

        {
                "segments":["526f7a71dab9d70711000003","526f7a71dab9d70711000004"],
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "count":"42"
        }
        
## POST /test/notification/user/{user}
Send a message to a `user`. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Parameters

    + user (required, string, `testuser@example.com`)...The user ID is the one the client device registered with, e.g., the user's email address. 

+ Request (application/json)

        {
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "count":"42"
        }
        
## POST /test/notification/device/{device}
Send a message to a `device`. This call must be authenticated with the `applicationKey` and `masterSecret`

+ Parameters

    + device (required, string, `bbff2ce9b547d2df4731bac277dc4360dcc4874309ece7950a8bd526b5af2218`)...The deviceID is the ID as registered by the device, e.g. APNS token or GCM registration ID.

+ Request (application/json)

        {
                "message":"Hello world!",
                "type":"re.notifica.notification.Alert",
                "ttl":3600,
                "sound":"default",
                "content": [
                        {
                                "type":"re.notifica.content.Text",
                                "data":"Because this long text will never fit inside a simple alert or toast, we send it along as content and it will be automatically displayed when the user opens the notification"
                        }
                ],
                "actions":[
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Please come in"
                        },
                        {
                                "type":"re.notifica.action.Callback",
                                "label":"Go away"
                        }
                ]
        }

+ Response 201 (application/json; charset=utf-8)

        {
                "count":"42"
        }
